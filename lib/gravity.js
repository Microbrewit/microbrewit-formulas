// Generated by CoffeeScript 1.10.0
(function() {
  var Decimal, _, convert, fg, gravityPercentage, gravityPoints, og;

  convert = require('./convert');

  _ = {
    isNaN: require('lodash.isnan')
  };

  Decimal = require('decimal.js');

  Decimal.config({
    'errors': false
  });

  og = function(totalGP) {
    og = 1 + totalGP / 1000;
    if (_.isNaN(og)) {
      og = 1;
    }
    return og.toFixed(3);
  };

  fg = function(og, attenuation) {
    if (attenuation == null) {
      attenuation = 0.75;
    }
    fg = (og - 1) * (1 - attenuation) + 1;
    if (_.isNaN(fg)) {
      fg = og;
    }
    return fg.toFixed(3);
  };

  gravityPercentage = function(og, gp) {
    var percent, totalGP;
    totalGP = (og - 1) * 1000;
    if (totalGP === 0) {
      percent = 0;
    } else {
      percent = Math.round(gp / totalGP * 100);
    }
    return percent;
  };

  gravityPoints = function(calc) {
    calc.type = calc.type.toLowerCase();
    if (calc.weightUnit == null) {
      calc.weightUnit = 'grams';
    }
    if (calc.fluidUnit == null) {
      calc.fluidUnit = 'liters';
    }
    calc.ppg = parseFloat(calc.ppg);
    calc.weight = convert.convert(parseFloat(calc.amount), calc.weightUnit, 'lbs');
    calc.volume = convert.convert(parseFloat(calc.volume), calc.fluidUnit, 'gallons');
    if (calc.type === 'malt' || calc.type === 'grain') {
      calc.efficiency = parseFloat(calc.efficiency) / 100;
    } else {
      calc.efficiency = 1;
    }
    gravityPoints = Math.round((calc.weight * calc.ppg * calc.efficiency) / calc.volume);
    return gravityPoints;
  };

  module.exports = {
    gravityPoints: gravityPoints,
    gravityPercentage: gravityPercentage,
    og: og,
    fg: fg
  };

}).call(this);
